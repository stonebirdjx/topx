// Code generated by MockGen. DO NOT EDIT.
// Source: ./biz/config/config.go
//
// Generated by this command:
//
//	mockgen -source=./biz/config/config.go -destination=./biz/mock/config.go -package=mock
//
// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockConfiger is a mock of Configer interface.
type MockConfiger struct {
	ctrl     *gomock.Controller
	recorder *MockConfigerMockRecorder
}

// MockConfigerMockRecorder is the mock recorder for MockConfiger.
type MockConfigerMockRecorder struct {
	mock *MockConfiger
}

// NewMockConfiger creates a new mock instance.
func NewMockConfiger(ctrl *gomock.Controller) *MockConfiger {
	mock := &MockConfiger{ctrl: ctrl}
	mock.recorder = &MockConfigerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfiger) EXPECT() *MockConfigerMockRecorder {
	return m.recorder
}

// GetBurst mocks base method.
func (m *MockConfiger) GetBurst() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBurst")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetBurst indicates an expected call of GetBurst.
func (mr *MockConfigerMockRecorder) GetBurst() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBurst", reflect.TypeOf((*MockConfiger)(nil).GetBurst))
}

// GetMongDBName mocks base method.
func (m *MockConfiger) GetMongDBName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMongDBName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetMongDBName indicates an expected call of GetMongDBName.
func (mr *MockConfigerMockRecorder) GetMongDBName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMongDBName", reflect.TypeOf((*MockConfiger)(nil).GetMongDBName))
}

// GetMongDBURI mocks base method.
func (m *MockConfiger) GetMongDBURI() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMongDBURI")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetMongDBURI indicates an expected call of GetMongDBURI.
func (mr *MockConfigerMockRecorder) GetMongDBURI() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMongDBURI", reflect.TypeOf((*MockConfiger)(nil).GetMongDBURI))
}

// GetRateLimte mocks base method.
func (m *MockConfiger) GetRateLimte() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRateLimte")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetRateLimte indicates an expected call of GetRateLimte.
func (mr *MockConfigerMockRecorder) GetRateLimte() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRateLimte", reflect.TypeOf((*MockConfiger)(nil).GetRateLimte))
}

// GetRedisURI mocks base method.
func (m *MockConfiger) GetRedisURI() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRedisURI")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRedisURI indicates an expected call of GetRedisURI.
func (mr *MockConfigerMockRecorder) GetRedisURI() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRedisURI", reflect.TypeOf((*MockConfiger)(nil).GetRedisURI))
}
